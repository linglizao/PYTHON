# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DataMaster.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import os
from PyQt5 import QtCore, QtGui, QtWidgets
import xlrd3 as xlrd
import xlwt
import numpy as np
from xlutils.copy import copy

#结构体定义
class reslt:
    def __init__(self):
        self.pct0 = 0;
        self.pct1 = 0;
        self.pct2 = 0;
        self.output = '';



class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(408, 219)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")


        # Open按钮
        self.Open = QtWidgets.QPushButton(Form)
        self.Open.setObjectName("Open")
        self.gridLayout.addWidget(self.Open, 0, 1, 1, 1)
        self.Open.clicked.connect(self.Open_button_click)


        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 0, 1, 1)


        self.AllSheets = QtWidgets.QCheckBox(Form)
        self.AllSheets.setObjectName("AllSheets")
        self.gridLayout.addWidget(self.AllSheets, 2, 0, 1, 1)


        self.filelist = QtWidgets.QListView(Form)
        self.filelist.setObjectName("filelist")
        self.gridLayout.addWidget(self.filelist, 1, 0, 1, 1)


        # 计算按钮
        self.Calc = QtWidgets.QPushButton(Form)
        self.Calc.setObjectName("Calc")
        self.gridLayout.addWidget(self.Calc, 1, 1, 1, 1)
        self.Calc.clicked.connect(self.Calc_button_click)


        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Open.setText(_translate("Form", "打开"))
        self.AllSheets.setText(_translate("Form", "AllSheets"))
        self.Calc.setText(_translate("Form", "计算"))

    def Open_button_click(self):
        fileName, filetype = QtWidgets.QFileDialog.getOpenFileName(self.Open, "选择文件", "/", "All Files (*)")
        self.lineEdit.setText(fileName)

    def Calc_button_click(self):
        # 路径
        excel_dir = self.lineEdit.text()
        # print(excel_dir)
        sheets_input = xlrd.open_workbook(excel_dir)
        sheets_output = copy(sheets_input)

        #sheets数量
        sheets_total = sheets_input.sheet_names()

        for sheet_sel in sheets_total:
            sheet_tmp = sheets_input.sheet_by_name(sheet_sel)
            sheet_tmp_output = sheets_output.get_sheet(sheet_sel)
            # 列数
            ncols = sheet_tmp.ncols
            # 行数
            nrows = sheet_tmp.nrows
            # 遍历数据
            # ctype : 0 empty,1 string, 2 number, 3 date, 4 boolean, 5 error
            data_array = []
            for col in range(ncols-1):
                for row in range(nrows-1):
                    if 2 == sheet_tmp.cell(row, col).ctype:
                        data_array.append(sheet_tmp.cell_value(row, col))
                if len(data_array) > 0:
                    reslt.pct0 = np.percentile(data_array, 25)
                    reslt.pct1 = np.percentile(data_array, 50)
                    reslt.pct2 = np.percentile(data_array, 75)
                    reslt.output = str(reslt.pct1) + '(' + str(reslt.pct0) + ',' + str(reslt.pct2) + ')'
                    sheet_tmp_output.write(nrows, col, reslt.output)

            # 写入excel
            os.remove(excel_dir)
            sheets_output.save(excel_dir)

            # 提示计算结果完成
            QMessageBox.about(self, "标题", "关于对话框消息正文")

if __name__=="__main__":
    app=QtWidgets.QApplication(sys.argv)
    widget=QtWidgets.QWidget()
    ui=Ui_Form()
    ui.setupUi(widget)
    widget.show()
    sys.exit(app.exec_())
